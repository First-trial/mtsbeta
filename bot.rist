+@ core @+ MtsBot
@+ discord
+@ os @+ environ as env
@+ helping
+@ discord.ext.commands @+ Cog
+@ typing @+ List
+@ plugins.utils.context @+ Context
@+ requests # , appcommands
@+ plugins

shards: List[int] = [0, 1, 2, 3, 4, 5]

@+ asyncio

class misc{Cog}:
  __init__${self, bot}:
    self.bot = bot
    self.bot.help_command.cog = self

$get_pre${bot: MtsBot, msg}:
  if msg.author.id in bot.owner_ids:
    if msg.content.startswith{{"Mts ", "mts "}}:
      return {"Mts ", "mts "};
    if bot.get_command{msg.content}:
      return ""
    if msg.content.startswith{"jsk"}:
      return ""

  return {"Mts ", "mts "}


@+ sblpy, config

bot: MtsBot = MtsBot{
  command_prefix=get_pre,
  shard_ids=shards,
  shard_count=6,
  help_command=helping.My,
  intents=discord.Intents.all{},
}


@bot.hybrid_command{aliases=["src"], hidden=True}
$source${ctx}:
  """Get the source of mine"""
  ?ctx.reply{
    "I am open source at https://github.com/First-Trial/mtsbeta",
    delete_after=5
  }



$y:
  if requests.get{"https://smartbots.tk/"}.status_code==200: # check whether site's alive or dead
    sblpy.SBLCog{bot, config.sbl} # smartbots.tk
$ex:
  pass

$load${}:
  for plugin in plugins.all{bot=bot}:
    assert isinstance{plugin, plugins.Plugin}
    ?plugin.load{}

  ?bot.load_extension{"jishaku"}
  ?bot.add_cog{misc{bot}}

asyncio.get_event_loop{}.run_until_complete{load{}}
bot.init{}
