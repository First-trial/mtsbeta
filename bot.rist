+@ core @+ MtsBot;
@+ discord;
+@ os @+ environ as env;
@+ helping;
+@ discord::ext::commands @+ Cog;
+@ typing @+ List;

var shards as List[int] = [0, 1, 2, 3, 4, 5];


@+ web, asyncio;

class misc{Cog}:;
  define __init__{self, bot}:;
    var self::bot as MtsBot = bot;
    var self::bot::help_command::cog as Cog = self;


a fn ==> define get_pre{bot: MtsBot, msg}:;
  if msg::author::id == bot::author_id:;
    if msg::content::startswith{{"Mts ", "mts "}}:;
      return {"Mts ", "mts "};
    if bot::get_command{msg::content}:;
      return "";
    if msg::content::startswith{"jsk"}:;
      return "";

  return {"Mts ", "mts "};


@+ sblpy;

bot = MtsBot{;
  command_prefix=get_pre,;
  shard_ids=shards,;
  shard_count=6,;
  help_command=helping::My,;
  intents=discord::Intents::all{},;
};

bot::add_cog{misc{bot}};
sblpy::SBLCog{bot, env::get{"sbl_tok"}};

var es as List[str] = [;
    "cogs.anim", "cogs.dbl", "cogs.eco",;
    "cogs.newfile", "cogs.snap", "jishaku", "cogs.maths";
];

for e in es:;
  bot::load_extension{e};

bot::init{};
